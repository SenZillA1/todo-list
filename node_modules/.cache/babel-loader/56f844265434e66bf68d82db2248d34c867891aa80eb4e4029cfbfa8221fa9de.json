{"ast":null,"code":"var _jsxFileName = \"C:\\\\todo-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n//mock data\nimport data from \"./data.json\";\n//components\nimport Header from \"./Header\";\nimport ToDoList from \"./ToDoList\";\nimport ToDoForm from './ToDoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [toDoList, setToDoList] = useState(data);\n  const handleToggle = id => {\n    let mapped = toDoList.map(task => {\n      return task.id === Number(id) ? {\n        ...task,\n        complete: !task.complete\n      } : {\n        ...task\n      };\n    });\n    setToDoList(mapped);\n  };\n  const handleFilter = () => {\n    let filtered = toDoList.filter(task => {\n      return !task.complete;\n    });\n    setToDoList(filtered); // This line filters the tasks for display\n  };\n\n  const resetFilter = () => {\n    setToDoList(data);\n  };\n  const addTask = userInput => {\n    let copy = [...toDoList];\n    copy = [...copy, {\n      id: toDoList.length + 1,\n      task: userInput,\n      complete: false\n    }];\n    setToDoList(copy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      toDoList: toDoList,\n      handleToggle: handleToggle,\n      handleFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(ToDoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 14\n  }, this);\n}\n_s(App, \"WshGe9+ZT0+stlxaPTLMemFxGks=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","data","Header","ToDoList","ToDoForm","jsxDEV","_jsxDEV","App","_s","toDoList","setToDoList","handleToggle","id","mapped","map","task","Number","complete","handleFilter","filtered","filter","resetFilter","addTask","userInput","copy","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/todo-list/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n//mock data\nimport data from \"./data.json\";\n//components\nimport Header from \"./Header\";\nimport ToDoList from \"./ToDoList\";\nimport ToDoForm from './ToDoForm';\n\nfunction App() {\n\n    const [toDoList, setToDoList] = useState(data);\n\n    const handleToggle = (id) => {\n        let mapped = toDoList.map(task => {\n            return task.id === Number(id) ? {...task, complete: !task.complete } : {...task };\n        });\n        setToDoList(mapped);\n    }\n\n    const handleFilter = () => {\n        let filtered = toDoList.filter(task => {\n            return !task.complete;\n        });\n        setToDoList(filtered); // This line filters the tasks for display\n    }\n\n    const resetFilter = () => {\n        setToDoList(data);\n    }\n\n    const addTask = (userInput) => {\n        let copy = [...toDoList];\n        copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\n        setToDoList(copy);\n    }\n\n    return ( <\n        div className = \"App\" >\n        <\n        Header / >\n        <\n        ToDoList toDoList = { toDoList }\n        handleToggle = { handleToggle }\n        handleFilter = { handleFilter }\n        /> <\n        ToDoForm addTask = { addTask }\n        /> </div >\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA,OAAOC,IAAI,MAAM,aAAa;AAC9B;AACA,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACC,IAAI,CAAC;EAE9C,MAAMU,YAAY,GAAIC,EAAE,IAAK;IACzB,IAAIC,MAAM,GAAGJ,QAAQ,CAACK,GAAG,CAACC,IAAI,IAAI;MAC9B,OAAOA,IAAI,CAACH,EAAE,KAAKI,MAAM,CAACJ,EAAE,CAAC,GAAG;QAAC,GAAGG,IAAI;QAAEE,QAAQ,EAAE,CAACF,IAAI,CAACE;MAAS,CAAC,GAAG;QAAC,GAAGF;MAAK,CAAC;IACrF,CAAC,CAAC;IACFL,WAAW,CAACG,MAAM,CAAC;EACvB,CAAC;EAED,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIC,QAAQ,GAAGV,QAAQ,CAACW,MAAM,CAACL,IAAI,IAAI;MACnC,OAAO,CAACA,IAAI,CAACE,QAAQ;IACzB,CAAC,CAAC;IACFP,WAAW,CAACS,QAAQ,CAAC,CAAC,CAAC;EAC3B,CAAC;;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACtBX,WAAW,CAACT,IAAI,CAAC;EACrB,CAAC;EAED,MAAMqB,OAAO,GAAIC,SAAS,IAAK;IAC3B,IAAIC,IAAI,GAAG,CAAC,GAAGf,QAAQ,CAAC;IACxBe,IAAI,GAAG,CAAC,GAAGA,IAAI,EAAE;MAAEZ,EAAE,EAAEH,QAAQ,CAACgB,MAAM,GAAG,CAAC;MAAEV,IAAI,EAAEQ,SAAS;MAAEN,QAAQ,EAAE;IAAM,CAAC,CAAC;IAC/EP,WAAW,CAACc,IAAI,CAAC;EACrB,CAAC;EAED,oBAASlB,OAAA;IACDoB,SAAS,EAAG,KAAK;IAAAC,QAAA,gBACrBrB,OAAA,CACAJ,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACVzB,OAAA,CACAH,QAAQ;MAACM,QAAQ,EAAKA,QAAU;MAChCE,YAAY,EAAKA,YAAc;MAC/BO,YAAY,EAAKA;IAAc;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,KAAC,eAAAzB,OAAA,CACHF,QAAQ;MAACkB,OAAO,EAAKA;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAElB;AAACvB,EAAA,CAxCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}